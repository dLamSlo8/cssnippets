

.snippet-c-language-button {
    position: relative;
    padding: 0.5rem 0.75rem;
    border-radius: 0.5rem 0.5rem 0 0;

    &:not(&--active)::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        /* 
            Because this is a pseudo-element positioned absolute with the border, the content isn't affected by it and has
            the size of before the border is applied, so we need to offset the pseudo-element to re-center the content.
        */
        margin-left: -2px;
        border-radius: 0.5rem 0.5rem 0 0;

    }

    &:hover::before {
        background-color: var(--color-gray-light);
        border: 2px solid var(--color-black);
        border-bottom: none;
    }


    &--active {
        background-color: var(--color-black);
        color: var(--color-white);
    }
}

.snippet-l-main-columns {
    display: flex;
    --resizable-columns-gap: 1rem;

    & > * + * {
        margin-left: var(--resizable-columns-gap);
    }

    & > *:last-child {
        flex-grow: 1;
    }
}

.snippet-l-interactive-section {
    min-width: 300px;
}

.snippet-c-divider {
    position: relative;
    width: 5px;
    padding: 0 0.3rem;

    background-color: var(--color-gray);
    border-radius: 1rem;
    cursor: col-resize;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        box-shadow: 0px 2px 4px 2px rgba(0, 0, 0, 0.25);
        border-radius: 1rem;
        opacity: 0;
        transition: opacity 200ms ease-in-out;
    }

    &:hover::before {
        opacity: 1;
    }

    &:focus:not(.focus-visible) {
        outline: none;
        box-shadow: 0px 2px 4px 2px rgba(0, 0, 0, 0.35);
    }
}


.snippet-l-reference-section {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    width: fit-content;
}

.snippet-l-top-header {
    flex-direction: column;
    
    & > * + * {
        margin-top: var(--space-8);
        margin-left: 0;
    }

    @include mq('lg') {
        & > * + * {
            margin-top: 0;
        }
        flex-direction: row;
    }
}

.snippet-c-reference-link {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        bottom: 0;
        z-index: -1;
        width: 100%;
        height: 0.5rem;
        background-color: var(--color-primary-lighter);
        opacity: 0;
        transform: translateY(0.5rem);
        transition: transform 200ms ease-in-out,
                    opacity 200ms ease-in-out;
    }
    
    &:hover::before {
        transform: translateY(0);
        opacity: 1;
    }

}

.snippet-c-reference-context {
    padding: 0.25rem;
}

.snippet-l-topics {
    display: flex;
    flex-wrap: wrap;

    margin-left: calc(-1 * var(--space-3));

    & > * {
        margin: var(--space-3);
    }
}

.snippet-c-topic {
    padding: 0.5rem 1rem;
    background-color: var(--color-gray);
    white-space: nowrap;
}

.snippet-l-code {
    height: 500px;
    outline-offset: 5px;
    font-size: 0.75rem !important;
    @include mq('xs-sm') {
        font-size: 1rem !important;
    }
}

.snippet-c-visual {
    display: flex;

    justify-content: center;
    align-items: center;
    border: 2px solid var(--color-gray);
    border-radius: 0.5rem;
}

.snippet-c-visual--mobile {
    min-height: 300px;
}

// .snippet-c-right-column